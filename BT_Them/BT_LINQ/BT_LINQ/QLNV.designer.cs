#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BT_LINQ
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QLNV")]
	public partial class QLNVDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertDSNV(DSNV instance);
    partial void UpdateDSNV(DSNV instance);
    partial void DeleteDSNV(DSNV instance);
    partial void InsertDMPHONG(DMPHONG instance);
    partial void UpdateDMPHONG(DMPHONG instance);
    partial void DeleteDMPHONG(DMPHONG instance);
    partial void InsertCHUCVU(CHUCVU instance);
    partial void UpdateCHUCVU(CHUCVU instance);
    partial void DeleteCHUCVU(CHUCVU instance);
    #endregion
		
		public QLNVDataContext() : 
				base(global::BT_LINQ.Properties.Settings.Default.QLNVConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public QLNVDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLNVDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLNVDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLNVDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<DSNV> DSNVs
		{
			get
			{
				return this.GetTable<DSNV>();
			}
		}
		
		public System.Data.Linq.Table<DMPHONG> DMPHONGs
		{
			get
			{
				return this.GetTable<DMPHONG>();
			}
		}
		
		public System.Data.Linq.Table<CHUCVU> CHUCVUs
		{
			get
			{
				return this.GetTable<CHUCVU>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DSNV")]
	public partial class DSNV : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaNV;
		
		private string _HoTen;
		
		private System.DateTime _NgaySinh;
		
		private bool _GioiTinh;
		
		private string _MaPhong;
		
		private double _HeSoLuong;
		
		private string _MaChucVu;
		
		private EntityRef<DMPHONG> _DMPHONG;
		
		private EntityRef<CHUCVU> _CHUCVU;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNVChanging(string value);
    partial void OnMaNVChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnNgaySinhChanging(System.DateTime value);
    partial void OnNgaySinhChanged();
    partial void OnGioiTinhChanging(bool value);
    partial void OnGioiTinhChanged();
    partial void OnMaPhongChanging(string value);
    partial void OnMaPhongChanged();
    partial void OnHeSoLuongChanging(double value);
    partial void OnHeSoLuongChanged();
    partial void OnMaChucVuChanging(string value);
    partial void OnMaChucVuChanged();
    #endregion
		
		public DSNV()
		{
			this._DMPHONG = default(EntityRef<DMPHONG>);
			this._CHUCVU = default(EntityRef<CHUCVU>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="DateTime NOT NULL")]
		public System.DateTime NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="Bit NOT NULL")]
		public bool GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhong", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string MaPhong
		{
			get
			{
				return this._MaPhong;
			}
			set
			{
				if ((this._MaPhong != value))
				{
					if (this._DMPHONG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaPhongChanging(value);
					this.SendPropertyChanging();
					this._MaPhong = value;
					this.SendPropertyChanged("MaPhong");
					this.OnMaPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeSoLuong", DbType="Float NOT NULL")]
		public double HeSoLuong
		{
			get
			{
				return this._HeSoLuong;
			}
			set
			{
				if ((this._HeSoLuong != value))
				{
					this.OnHeSoLuongChanging(value);
					this.SendPropertyChanging();
					this._HeSoLuong = value;
					this.SendPropertyChanged("HeSoLuong");
					this.OnHeSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaChucVu", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string MaChucVu
		{
			get
			{
				return this._MaChucVu;
			}
			set
			{
				if ((this._MaChucVu != value))
				{
					if (this._CHUCVU.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaChucVuChanging(value);
					this.SendPropertyChanging();
					this._MaChucVu = value;
					this.SendPropertyChanged("MaChucVu");
					this.OnMaChucVuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DMPHONG_DSNV", Storage="_DMPHONG", ThisKey="MaPhong", OtherKey="MaPhong", IsForeignKey=true)]
		public DMPHONG DMPHONG
		{
			get
			{
				return this._DMPHONG.Entity;
			}
			set
			{
				DMPHONG previousValue = this._DMPHONG.Entity;
				if (((previousValue != value) 
							|| (this._DMPHONG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DMPHONG.Entity = null;
						previousValue.DSNVs.Remove(this);
					}
					this._DMPHONG.Entity = value;
					if ((value != null))
					{
						value.DSNVs.Add(this);
						this._MaPhong = value.MaPhong;
					}
					else
					{
						this._MaPhong = default(string);
					}
					this.SendPropertyChanged("DMPHONG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHUCVU_DSNV", Storage="_CHUCVU", ThisKey="MaChucVu", OtherKey="MaChucVu", IsForeignKey=true)]
		public CHUCVU CHUCVU
		{
			get
			{
				return this._CHUCVU.Entity;
			}
			set
			{
				CHUCVU previousValue = this._CHUCVU.Entity;
				if (((previousValue != value) 
							|| (this._CHUCVU.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CHUCVU.Entity = null;
						previousValue.DSNVs.Remove(this);
					}
					this._CHUCVU.Entity = value;
					if ((value != null))
					{
						value.DSNVs.Add(this);
						this._MaChucVu = value.MaChucVu;
					}
					else
					{
						this._MaChucVu = default(string);
					}
					this.SendPropertyChanged("CHUCVU");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DMPHONG")]
	public partial class DMPHONG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaPhong;
		
		private string _TenPhong;
		
		private EntitySet<DSNV> _DSNVs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPhongChanging(string value);
    partial void OnMaPhongChanged();
    partial void OnTenPhongChanging(string value);
    partial void OnTenPhongChanged();
    #endregion
		
		public DMPHONG()
		{
			this._DSNVs = new EntitySet<DSNV>(new Action<DSNV>(this.attach_DSNVs), new Action<DSNV>(this.detach_DSNVs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhong", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaPhong
		{
			get
			{
				return this._MaPhong;
			}
			set
			{
				if ((this._MaPhong != value))
				{
					this.OnMaPhongChanging(value);
					this.SendPropertyChanging();
					this._MaPhong = value;
					this.SendPropertyChanged("MaPhong");
					this.OnMaPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenPhong", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string TenPhong
		{
			get
			{
				return this._TenPhong;
			}
			set
			{
				if ((this._TenPhong != value))
				{
					this.OnTenPhongChanging(value);
					this.SendPropertyChanging();
					this._TenPhong = value;
					this.SendPropertyChanged("TenPhong");
					this.OnTenPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DMPHONG_DSNV", Storage="_DSNVs", ThisKey="MaPhong", OtherKey="MaPhong")]
		public EntitySet<DSNV> DSNVs
		{
			get
			{
				return this._DSNVs;
			}
			set
			{
				this._DSNVs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DSNVs(DSNV entity)
		{
			this.SendPropertyChanging();
			entity.DMPHONG = this;
		}
		
		private void detach_DSNVs(DSNV entity)
		{
			this.SendPropertyChanging();
			entity.DMPHONG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHUCVU")]
	public partial class CHUCVU : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaChucVu;
		
		private string _TenChucVu;
		
		private int _PhuCapCV;
		
		private EntitySet<DSNV> _DSNVs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaChucVuChanging(string value);
    partial void OnMaChucVuChanged();
    partial void OnTenChucVuChanging(string value);
    partial void OnTenChucVuChanged();
    partial void OnPhuCapCVChanging(int value);
    partial void OnPhuCapCVChanged();
    #endregion
		
		public CHUCVU()
		{
			this._DSNVs = new EntitySet<DSNV>(new Action<DSNV>(this.attach_DSNVs), new Action<DSNV>(this.detach_DSNVs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaChucVu", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaChucVu
		{
			get
			{
				return this._MaChucVu;
			}
			set
			{
				if ((this._MaChucVu != value))
				{
					this.OnMaChucVuChanging(value);
					this.SendPropertyChanging();
					this._MaChucVu = value;
					this.SendPropertyChanged("MaChucVu");
					this.OnMaChucVuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenChucVu", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string TenChucVu
		{
			get
			{
				return this._TenChucVu;
			}
			set
			{
				if ((this._TenChucVu != value))
				{
					this.OnTenChucVuChanging(value);
					this.SendPropertyChanging();
					this._TenChucVu = value;
					this.SendPropertyChanged("TenChucVu");
					this.OnTenChucVuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhuCapCV", DbType="Int NOT NULL")]
		public int PhuCapCV
		{
			get
			{
				return this._PhuCapCV;
			}
			set
			{
				if ((this._PhuCapCV != value))
				{
					this.OnPhuCapCVChanging(value);
					this.SendPropertyChanging();
					this._PhuCapCV = value;
					this.SendPropertyChanged("PhuCapCV");
					this.OnPhuCapCVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHUCVU_DSNV", Storage="_DSNVs", ThisKey="MaChucVu", OtherKey="MaChucVu")]
		public EntitySet<DSNV> DSNVs
		{
			get
			{
				return this._DSNVs;
			}
			set
			{
				this._DSNVs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DSNVs(DSNV entity)
		{
			this.SendPropertyChanging();
			entity.CHUCVU = this;
		}
		
		private void detach_DSNVs(DSNV entity)
		{
			this.SendPropertyChanging();
			entity.CHUCVU = null;
		}
	}
}
#pragma warning restore 1591
